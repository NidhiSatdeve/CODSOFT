
import express from "express";
import rateLimit from "express-rate-limit";
import {  registerController,loginController } from "../controller/authController.js";


const limiter = rateLimit({
    windowMs: 15 * 60 * 1000,
    max: 100,
    standardHeaders: true,
    legacyHeaders: false,
});

const router = express.Router();

/**
 * @swagger
 * components:
 *    schemas:
 *       User:
 *          type: object
 *          required:
 *            - name
 *            - lastname
 *            - email
 *            - password
 *          properties:
 *            id:
 *              type: string
 *              description: The Autogenerated id of User Collection
 *              example: CGVSJSJAGDAH
 *            name:
 *              type: string
 *              description: User Name
 *              example: John
 *            lastname:
 *              type: string
 *              description: User Last Name
 *              example: Greiss
 *            email:
 *              type: string
 *              description: User Email Address
 *              example: johngreis@gmail.com
 *            password:
 *              type: string
 *              description: User password should be greater than 6 characters
 *              example: test@123
 *            location:
 *              type: string
 *              description: User Location city or country
 *              example: Texas
 */
/**
 * @swagger
 * tags:
 *   name: Auth
 *   description: Authentication APIs
 */

/**
 * @swagger
 * /api/v1/auth/register:
 *   post:
 *     summary: Register new user
 *     tags: [Auth]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/User'
 *     responses:
 *       200:
 *         description: User created successfully
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/User'
 *       500:
 *          description: Internal server error
 */ 
/**
 * @swagger
 * /api/v1/auth/login:
 *   post:
 *     summary: Login page
 *     tags: [Auth]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/User'
 *     responses:
 *       200:
 *         description: Login successful
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/User'
 *       500:
 *         description: Something went wrong
 */

router.post('/register', limiter, registerController);
router.post('/login', limiter, loginController);

export default router;
